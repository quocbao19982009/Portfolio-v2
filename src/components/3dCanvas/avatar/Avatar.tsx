/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useAnimations, useFBX, useGLTF } from '@react-three/drei';
import { GroupProps, useFrame } from '@react-three/fiber';
import React from 'react';
import { Group } from 'three';

const Avatar = (props: GroupProps) => {
    const ref = React.useRef<Group | null>(null);
    const { nodes, materials } = useGLTF('models/658ea6f4d729e67ab0848b4a.glb');

    const animation = useFBX('animation/Waving.fbx');
    const waving = animation.animations;
    waving[0].name = 'waving';
    console.log('waving', waving);
    const { actions } = useAnimations(waving, ref);
    console.log('actions', actions);

    React.useEffect(() => {
        // gui = new GUI()
        // gui.add(ref.current.rotation, 'x', 0, Math.PI * 2).name('rotationX')
        // gui.add(ref.current.rotation, 'y', 0, Math.PI * 2).name('rotationY')
        // gui.add(ref.current.rotation, 'z', 0, Math.PI * 2).name('rotationZ')
        // gui.add(ref.current.position, 'x', -10, 10).name('positionX')
        // gui.add(ref.current.position, 'y', -10, 10).name('positionY')
        // gui.add(ref.current.position, 'z', -10, 10).name('positionZ')
        // return () => {
        //     gui.destroy()
        // }
    }, []);

    if (ref.current) {
        // Use 'head' variable here if needed
    }

    useFrame((state) => {
        // const target = new THREE.Vector3(state.pointer.x, state.pointer.y, 0)
        // const head = ref.current?.getObjectByName('Head') as THREE.Bone
        // head.lookAt(target)
        // Head look at pointer mouse
        // if (head) {
        //     head.lookAt(state.p)
        // }
        // console.log('head', head)
        //   ref.current.getObjectByName("Head")
    });
    return (
        <group {...props} ref={ref} dispose={null}>
            <group>
                <primitive object={nodes.Hips} />
                <skinnedMesh
                    geometry={nodes.Wolf3D_Body.geometry}
                    material={materials.Wolf3D_Body}
                    skeleton={nodes.Wolf3D_Body.skeleton}
                />
                <skinnedMesh
                    geometry={nodes.Wolf3D_Outfit_Bottom.geometry}
                    material={materials.Wolf3D_Outfit_Bottom}
                    skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton}
                />
                <skinnedMesh
                    geometry={nodes.Wolf3D_Outfit_Footwear.geometry}
                    material={materials.Wolf3D_Outfit_Footwear}
                    skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton}
                />
                <skinnedMesh
                    geometry={nodes.Wolf3D_Outfit_Top.geometry}
                    material={materials.Wolf3D_Outfit_Top}
                    skeleton={nodes.Wolf3D_Outfit_Top.skeleton}
                />
                <skinnedMesh
                    geometry={nodes.Wolf3D_Hair.geometry}
                    material={materials.Wolf3D_Hair}
                    skeleton={nodes.Wolf3D_Hair.skeleton}
                />
                <skinnedMesh
                    name="EyeLeft"
                    geometry={nodes.EyeLeft.geometry}
                    material={materials.Wolf3D_Eye}
                    skeleton={nodes.EyeLeft.skeleton}
                    morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary}
                    morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences}
                />
                <skinnedMesh
                    name="EyeRight"
                    geometry={nodes.EyeRight.geometry}
                    material={materials.Wolf3D_Eye}
                    skeleton={nodes.EyeRight.skeleton}
                    morphTargetDictionary={nodes.EyeRight.morphTargetDictionary}
                    morphTargetInfluences={nodes.EyeRight.morphTargetInfluences}
                />
                <skinnedMesh
                    name="Wolf3D_Head"
                    geometry={nodes.Wolf3D_Head.geometry}
                    material={materials.Wolf3D_Skin}
                    skeleton={nodes.Wolf3D_Head.skeleton}
                    morphTargetDictionary={
                        nodes.Wolf3D_Head.morphTargetDictionary
                    }
                    morphTargetInfluences={
                        nodes.Wolf3D_Head.morphTargetInfluences
                    }
                />
                <skinnedMesh
                    name="Wolf3D_Teeth"
                    geometry={nodes.Wolf3D_Teeth.geometry}
                    material={materials.Wolf3D_Teeth}
                    skeleton={nodes.Wolf3D_Teeth.skeleton}
                    morphTargetDictionary={
                        nodes.Wolf3D_Teeth.morphTargetDictionary
                    }
                    morphTargetInfluences={
                        nodes.Wolf3D_Teeth.morphTargetInfluences
                    }
                />
            </group>
        </group>
    );
};

useGLTF.preload('models/658ea6f4d729e67ab0848b4a.glb');

export default Avatar;
